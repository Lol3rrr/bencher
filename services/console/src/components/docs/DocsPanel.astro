---
import DocsLayout from "../../layouts/docs/DocsLayout.astro";
import {getLangCollection, langPath} from "../../i18n/utils.ts"
import { Language, architecture, defaultLang, explanation, howTo, reference, tutorial } from "../../i18n/ui";
import Collection, { collectionPath } from "../../util/collection";

interface Props {
  lang: undefined | string;
}
const lang: Language = Astro.props.lang ?? defaultLang;

const tutorialCollection = await getLangCollection(Collection.tutorial);
const howToCollection = await getLangCollection(Collection.how_to);
const explanationCollection = await getLangCollection(Collection.explanation);
const referenceCollection = await getLangCollection(Collection.reference);

const title = () => {
  switch(lang) {
    case Language.en:
      return "Bencher Docs";
    case Language.de:
      return "Bencher Dokumentation";
    case Language.es:
      return "Documentos de Bencher";
    case Language.fr:
      return "Documents de Bencher";
    case Language.ja:
      return "ベンチャーのドキュメント";
    case Language.ko:
      return "Bencher 문서";
    case Language.pt:
      return "Documentação da Bencher";
    case Language.ru:
      return "Документация Bencher";
    case Language.zh:
      return "Bencher 文档";
  }
};

const description = () => {
  switch (lang) {
    case Language.en:
      return "Table of contents for the Bencher documentation. Learn how to setup continuous benchmarking for your project.";
    case Language.de:
      return "Inhaltsverzeichnis der Bencher Dokumentation. Erfahren Sie, wie Sie ein kontinuierliches Benchmarking für Ihr Projekt einrichten.";
    case Language.es:
      return "Índice de contenidos de la documentación de Bencher. Aprenda a configurar evaluaciones comparativas continuas para su proyecto.";
    case Language.fr:
      return "Table des matières de la documentation Bencher. Découvrez comment configurer une analyse comparative continue pour votre projet.";
    case Language.ja:
      return "ベンチャー ドキュメントの目次。 プロジェクトの継続的なベンチマークを設定する方法を学びます。"
    case Language.ko:
      return "Bencher 문서의 목차. 프로젝트에 대한 지속적인 벤치마킹을 설정하는 방법을 알아보십시오.";
    case Language.pt:
      return "Índice da documentação do Bencher. Aprenda como configurar benchmarking contínuo para seu projeto.";
    case Language.ru:
      return "Оглавление документации Bencher. Узнайте, как настроить непрерывный бенчмаркинг для вашего проекта.";
    case Language.zh:
      return "Bencher 文档的目录。 了解如何为您的项目设置持续的基准测试。";
  }
}
---

<DocsLayout title={title()} description={description()} heading={title()} lang={lang}>
  <nav class="menu">
    {[
      {
        label: tutorial(lang),
        collection: Collection.tutorial,
        content: tutorialCollection[lang],
      },
      {
        label: howTo(lang),
        collection: Collection.how_to,
        content: howToCollection[lang],
      },
      {
        label: explanation(lang),
        collection: Collection.explanation,
        content: explanationCollection[lang],
      },
      {
        label: reference(lang),
        collection: Collection.reference,
        content: referenceCollection[lang],
        prefix: (
          <li>
            <a href={`/${langPath(lang)}docs/reference/api`}>REST API</a>
          </li>
          <li>
            <a href={`/${langPath(lang)}docs/reference/architecture/`}>{architecture(lang)}</a>
          </li>
        ),
      }
    ].map(({ label, collection, content, prefix }) => (
      <p class="menu-label">{label}</p>
      <ul class="menu-list">
        {prefix}
        {
          content?.map((page) => (
            <li>
              <a href={`/${langPath(lang)}docs/${collectionPath(collection)}/${page.slug}/`}>{page.data.heading}</a>
            </li>
          ))
        }
      </ul>
    ))}
  </nav>
</DocsLayout>
